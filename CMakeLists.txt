cmake_minimum_required(VERSION 2.8.12)
project(cupcake CXX)

if(MSVC)
  set(CMAKE_CXX_FLAGS "/await")

  # No easy way to remove default RTC flag. Need to turn off at the moment.
  STRING (REGEX REPLACE "/RTC(su|[1su])" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
  STRING (REGEX REPLACE "/RTC(su|[1su])" "" CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
  STRING (REGEX REPLACE "/RTC(su|[1su])" "" CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
else()
  set(CMAKE_CXX_FLAGS "-std=c++11 -Wall")
  set(CMAKE_CXX_FLAGS_DEBUG "-g")
  set(CMAKE_CXX_FLAGS_RELEASE "-O2 -flto -DNDEBUG")

  # TODO: Remove this
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native")

  # On Windows, we need to set the Windows version
  if(WIN32)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DWINVER=0x0601")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_WIN32_WINNT=0x0601")
  endif()

  # TODO: Document how to do this instead of hard coding it here
  # The spec file was generated by "g++ -dumpspecs > msvcr100.spec" and modified.
  if(MSYS)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -specs=${CMAKE_CURRENT_SOURCE_DIR}/msvcr100.spec")
  endif()
endif()

if(WIN32)
  set(OS_LIBS Ws2_32 Mswsock)
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
  set(OS_LIBS -lpthread)
endif()

add_subdirectory(src)
add_subdirectory(inc)
add_subdirectory(priv_inc)
add_subdirectory(test)

set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR})

add_library(cupcake ${CUPCAKE_SRC})

target_include_directories(cupcake PUBLIC
  inc
  priv_inc
)
